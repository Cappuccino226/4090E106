MAC位址（英語：Media Access Control Address），直譯為媒體存取控制位址，也稱為區域網路位址（LAN Address），乙太網路位址（Ethernet Address）或實體位址（Physical Address），它是一個用來確認網路裝置位置的位址。在OSI模型中，第三層網路層負責IP位址，第二層資料鏈結層則負責MAC位址。MAC位址用於在網路中唯一標示一個網卡，一台裝置若有一或多個網卡，則每個網卡都需要並會有一個唯一的MAC位址。
格式
MAC位址共48位元（6個位元組），以十六進位表示。第1Bit為廣播位址(0)/群播位址(1)，第2Bit為廣域位址(0)/區域位址(1)。前3~24位元由IEEE決定如何分配給每一家製造商，且不重複，後24位元由實際生產該網路裝置的廠商自行指定且不重複。

ff:ff:ff:ff:ff:ff則作為廣播位址。

01:xx:xx:xx:xx:xx是多播位址，01:00:5e:xx:xx:xx是IPv4多播位址。

舉例
假設現有一台路由器，含有一個WAN埠及四個LAN埠。它的WAN埠會有一個如61.61.61.61的IP位址，也會有一個如00:0A:02:0B:03:0C的MAC位址。而它的四個LAN埠會各分配到一個例如192.168.1.0/24的IP位址，四個埠各會有一個不同的MAC位址。

如何檢視MAC位址
Windows
在Windows命令提示符（cmd.exe）下執行 ipconfig /all 命令。假設執行結果含：

        Physical Address. . . . . . . . . : 00-05-5D-E8-0F-A3
那麼其中的00-05-5D-E8-0F-A3就是本機網卡的MAC位址。如果電腦上有多個網路裝置（無論物理或虛擬），則會有多組資訊及MAC位址，需辨識相應的裝置。

Linux
第一種： 在 Linux 下執行 ifconfig 命令，如下：

 $ ifconfig
 eth0    Link encap:Ethernet HWaddr 00:0C:29:01:98:27
         inet addr:192.168.1.88  Bcast:192.168.1.255  Mask:255.255.255.0
         UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
         RX packets:74978 errors:0 dropped:0 overruns:0 frame:0
         TX packets:38451 errors:0 dropped:0 overruns:0 carrier:0
         collisions:0 txqueuelen:100
         RX bytes:14157042 (13.5 Mb)  TX bytes:5063398 (4.8 Mb)
         Interrupt:18 Base address:0x1080
 
 lo      Link encap:Local Loopback
         inet addr:127.0.0.1  Mask:255.0.0.0
         UP LOOPBACK RUNNING  MTU:16436  Metric:1
         RX packets:1097 errors:0 dropped:0 overruns:0 frame:0
         TX packets:1097 errors:0 dropped:0 overruns:0 carrier:0
         collisions:0 txqueuelen:0
         RX bytes:151393 (147.8 Kb)  TX bytes:151393 (147.8 Kb)
eth0 為第一塊物理網卡， HWaddr 00:0C:29:01:98:27 就是MAC位址，lo為本地迴環位址。

第二種： 執行 ip 命令(是一個命令，不是Tcp/Ip里的ip)，範例如下：

 $ ip link show
 1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default 
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
 2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP mode DEFAULT group default qlen 1000
    link/ether 28:d2:44:d4:e6:ea brd ff:ff:ff:ff:ff:ff
其中'$'是linux下的命令提示符，一般情況下：$ 表示一般用戶，# 表示root用戶

如何修改MAC位址
網卡MAC位址可以通過Windows 裝置管理員或其他工具修改。對於某些手機、平板電腦裝置來說，其MAC位址／產品序號均由廠方連同銷售或保修時的客戶資料一併記錄在案[1]，而有關的MAC位址也不可通過常規手段來修改。

參考資料
 如何尋找 MacBook Pro 的序號. Apple.
外部連結
（英文） IEEE-SA - Registration Authority MA-L Public Listing
如何修改網卡的MAC位址

UDP

用戶資料報協定（英語：User Datagram Protocol，縮寫：UDP；又稱用戶資料包協定）是一個簡單的面向資料報的通信協定，位於OSI模型的傳輸層。該協定由David P. Reed在1980年設計且在RFC 768中被規範。典型網路上的眾多使用UDP協定的關鍵應用在一定程度上是相似的。

在TCP/IP模型中，UDP為網路層以上和應用層以下提供了一個簡單的介面。UDP只提供資料的不可靠傳遞，它一旦把應用程式發給網路層的資料傳送出去，就不保留資料備份（所以UDP有時候也被認為是不可靠的資料報協定）。UDP在IP資料報的頭部僅僅加入了復用和資料校驗欄位。

UDP適用於不需要或在程式中執行錯誤檢查和糾正的應用，它避免了協定棧中此類處理的開銷。對時間有較高要求的應用程式通常使用UDP，因為丟棄封包比等待或重傳導致延遲更可取。


目錄
1	可靠性
2	應用
3	UDP的分組結構
4	UDP校驗和計算
4.1	IPv4偽頭部
4.2	IPv6偽頭部
5	參見
6	參考文獻
7	外部連結
可靠性
由於UDP缺乏可靠性且屬於無連接協定，所以應用程式通常必須容許一些遺失、錯誤或重複的封包。某些應用程式（如TFTP）可能會根據需要在應用程式層中添加基本的可靠性機制。[1]

一些應用程式不太需要可靠性機制，甚至可能因為引入可靠性機制而降低效能，所以它們使用UDP這種缺乏可靠性的協定。串流媒體，即時多人遊戲和IP語音（VoIP）是經常使用UDP的應用程式。 在這些特定應用中，丟包通常不是重大問題。如果應用程式需要高度可靠性，則可以使用諸如TCP之類的協定。

例如，在VoIP中延遲和抖動是主要問題。如果使用TCP，那麼任何封包遺失或錯誤都將導致抖動，因為TCP在請求及重傳遺失資料時不向應用程式提供後續資料。如果使用UDP，那麼應用程式則需要提供必要的握手，例如即時確認已收到的訊息。

由於UDP缺乏擁塞控制，所以需要基於網路的機制來減少因失控和高速UDP流量負荷而導致的擁塞崩潰效應。換句話說，因為UDP傳送端無法檢測擁塞，所以像使用包佇列和丟棄技術的路由器之類的網路基礎裝置會被用於降低UDP過大流量。資料擁塞控制協定（DCCP）設計成通過在諸如串流媒體類型的高速率UDP流中增加主機擁塞控制，來減小這個潛在的問題。

應用
許多關鍵的網際網路應用程式使用UDP[2]，包括：

域名系統（DNS），其中查詢階段必須快速，並且只包含單個請求，後跟單個回覆封包；
動態主機組態協定（DHCP），用於動態分配IP位址；
簡單網路管理協定（SNMP）；
路由資訊協定（RIP）；
網路時間協定（NTP）。
串流媒體、線上遊戲流量通常使用UDP傳輸。 即時影片流和音訊流應用程式旨在處理偶爾遺失、錯誤的封包，因此只會發生品質輕微下降，而避免了重傳封包帶來的高延遲。 由於TCP和UDP都在同一網路上執行，因此一些企業發現來自這些即時應用程式的UDP流量影響了使用TCP的應用程式的效能，例如銷售、會計和資料庫系統。 當TCP檢測到封包遺失時，它將限制其資料速率使用率。由於即時和業務應用程式對企業都很重要，因此一些人認為開發服務品質解決方案至關重要。[3]

某些VPN應用（如OpenVPN）使用UDP並可以在應用程式級別實現可靠連接和錯誤檢查。

UDP的分組結構
UDP報頭
偏移	位元組	0	1	2	3
位元組	位	 0	 1	 2	 3	 4	 5	 6	 7	 8	 9	10	11	12	13	14	15	16	17	18	19	20	21	22	23	24	25	26	27	28	29	30	31
0	0	來源連接埠	目的連接埠
4	32	報文長度	校驗和
UDP報頭包括4個欄位，每個欄位占用2個位元組（即16個位元）。在IPv4中，「來源連接埠」和「校驗和」是可選欄位（以粉色背景標出）。在IPv6中，只有來源連接埠是可選欄位。 各16bit的來源埠和目的埠用來標記傳送和接受的應用行程。因為UDP不需要應答，所以來源埠是可選的，如果來源埠不用，那麼置為零。在目的埠後面是長度固定的以位元組為單位的長度域，用來指定UDP資料報包括資料部分的長度，長度最小值為8byte。首部剩下地16bit是用來對首部和資料部分一起做校驗和（Checksum）的，這部分是可選的，但在實際應用中一般都使用這一功能。

報文長度
該欄位指定UDP報頭和資料總共占用的長度。可能的最小長度是8位元組，因為UDP報頭已經占用了8位元組。由於這個欄位的存在，UDP報文總長不可能超過65535位元組（包括8位元組的報頭，和65527位元組的資料）。實際上通過IPv4協定傳輸時，由於IPv4的頭部資訊要占用20位元組，因此資料長度不可能超過65507位元組（65,535 − 8位元組UDP報頭 − 20位元組IP頭部）。
在IPv6的jumbogram中，是有可能傳輸超過65535位元組的UDP封包的。依據RFC 2675，如果這種情況發生，報文長度應被填寫為0。
校驗和
校驗和欄位可以用於發現頭部資訊和資料中的傳輸錯誤。該欄位在IPv4中是可選的，在IPv6中則是強制的。如果不使用校驗和，該欄位應被填充為全0。
UDP校驗和計算
IPv4偽頭部
當UDP執行在IPv4之上時，為了能夠計算校驗和，需要在UDP封包前添加一個「偽頭部」。偽頭部包括了IPv4頭部中的一些資訊，但它並不是傳送IP封包時使用的IP封包的頭部，而只是一個用來計算校驗和而已。

位	0 – 7	8 – 15	16 – 23	24 – 31
0	來源位址
32	目的位址
64	全零	協定名	UDP報文長度
96	來源連接埠	目的連接埠
128	報文長度	核對和
160+	 
數據
 
IPv6偽頭部
當UDP執行於IPV6之上時，校驗和是必須的，其計算方法位於RFC 2460:
任何包含來自IP頭位址的傳輸層或其他上層協定，其校驗和計算必須被修改，以適應IPv6的128位元ip位址。[4]

IPv6偽頭部是生成校驗和所用的資料。

位	0 – 7	8 – 15	16 – 23	24 – 31
0	來源位址
32
64
96
128	目的位址
160
192
224
256	UDP報文長度
288	全零	下一個指標位置
320	來源連接埠	目的連接埠
352	報文長度	校驗和
384+	 
資料
 
參見
TCP/UDP埠列表
UDP-Lite——一種通過減少校驗和覆蓋程度來提升資料可達性的改進
Micro Transport Protocol
基於UDP的資料傳輸協定
參考文獻
 Forouzan, B.A. (2000). TCP/IP: Protocol Suite, 1st ed. New Delhi, India: Tata McGraw-Hill Publishing Company Limited.
 Kurose, J. F.; Ross, K. W. Computer Networking: A Top-Down Approach 5th. Boston, MA: Pearson Education. 2010. ISBN 978-0-13-136548-3.
 The impact of UDP on Data Applications. Networkperformancedaily.com. [17 August 2011]. （原始內容存檔於31 July 2007）. 已忽略未知參數|df= (幫助)
 Deering S. & Hinden R. Internet Protocol, Version 6 (IPv6) Specification. Internet Engineering Task Force. December 1998. RFC 2460.
外部連結
RFC768
UDP協定詳細資料
